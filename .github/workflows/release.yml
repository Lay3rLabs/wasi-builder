name: Publish Docker Image

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  # You can enable the below to build on each PR push for testing,
  # pull_request:
  #   branches:
  #     - main

jobs:
  build_amd64:
    name: Build and Push AMD64 Image
    runs-on: linux-8-core
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Dotenv Action
        uses: falti/dotenv-action@v1.1.4
        with:
          export-variables: true
          keys-case: bypass

      - name: Set IMAGE_TAG
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            IMAGE_TAG="${TAG//[^a-zA-Z0-9_.-]/-}"
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image
        run: |
          docker buildx build . \
            --platform linux/amd64 \
            --tag $REGISTRY/$ORG/$IMAGE_NAME:$IMAGE_TAG-amd64 \
            --build-arg RUST_VERSION=$RUST_VERSION \
            --build-arg CARGO_COMPONENT_VERSION=$CARGO_COMPONENT_VERSION \
            --build-arg WASM_TOOLS_VERSION=$WASM_TOOLS_VERSION \
            --build-arg WKG_VERSION=$WKG_VERSION \
            --push \
            -f $DOCKERFILE

  build_arm64:
    name: Build and Push ARM64 Image
    runs-on: arm64-builder
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Dotenv Action
        uses: falti/dotenv-action@v1.1.4
        with:
          export-variables: true
          keys-case: bypass

      - name: Set IMAGE_TAG
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            IMAGE_TAG="${TAG//[^a-zA-Z0-9_.-]/-}"
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64 image
        run: |
          docker buildx build . \
            --platform linux/arm64 \
            --tag $REGISTRY/$ORG/$IMAGE_NAME:$IMAGE_TAG-arm64 \
            --build-arg RUST_VERSION=$RUST_VERSION \
            --build-arg CARGO_COMPONENT_VERSION=$CARGO_COMPONENT_VERSION \
            --build-arg WASM_TOOLS_VERSION=$WASM_TOOLS_VERSION \
            --build-arg WKG_VERSION=$WKG_VERSION \
            --push \
            -f $DOCKERFILE

  create_manifest:
    name: Create and Push Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: [build_amd64, build_arm64]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Dotenv Action
        uses: falti/dotenv-action@v1.1.4
        with:
          export-variables: true
          keys-case: bypass

      - name: Set IMAGE_TAG
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            IMAGE_TAG="${TAG//[^a-zA-Z0-9_.-]/-}"
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${GITHUB_REF_NAME//\//-}"
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set GIT_HASH
        run: |
          export GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo "GIT_HASH=${GIT_HASH}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          docker buildx imagetools create \
            --tag $REGISTRY/$ORG/$IMAGE_NAME:$IMAGE_TAG \
            --tag $REGISTRY/$ORG/$IMAGE_NAME:$GIT_HASH \
            $REGISTRY/$ORG/$IMAGE_NAME:$IMAGE_TAG-amd64 \
            $REGISTRY/$ORG/$IMAGE_NAME:$IMAGE_TAG-arm64
